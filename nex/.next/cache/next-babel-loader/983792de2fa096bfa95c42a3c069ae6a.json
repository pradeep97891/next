{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/pradeepK/Documents/Study/React-sample/nex/pages/chart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/layout';\nimport Plot from 'react-plotly.js';\n\nvar Chart = /*#__PURE__*/function (_Component) {\n  _inherits(Chart, _Component);\n\n  var _super = _createSuper(Chart);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      list: [1, 2, 3]\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, __jsx(Plot, {\n        data: [{\n          x: [\"Frank\", \"Jerry\", \"Jill\", \"Regis\", \"Tracy\"],\n          y: [2, 6, 3],\n          type: 'histogram',\n          mode: 'lines+markers',\n          marker: {\n            color: 'green'\n          }\n        } // { type: 'bar', x: [1, 2, 3], y: [2, 5, 3] },\n        ],\n        layout: {\n          width: 450,\n          height: 450,\n          title: 'Name vs WPM'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/pradeepK/Documents/Study/React-sample/nex/pages/chart.js"],"names":["Layout","Plot","Chart","props","state","list","x","y","type","mode","marker","color","width","height","title","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;IACMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADG,KAAb;AAHe;AAMlB;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AACI,QAAA,IAAI,EAAE,CACF;AACIC,UAAAA,CAAC,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,OAA3B,EAAoC,OAApC,CADP;AAEIC,UAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFP;AAGIC,UAAAA,IAAI,EAAE,WAHV;AAIIC,UAAAA,IAAI,EAAE,eAJV;AAKIC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AALZ,SADE,CAQF;AARE,SADV;AAWI,QAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,GAAtB;AAA2BC,UAAAA,KAAK,EAAE;AAAlC,SAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAmBH;;;;EA7BeC,S;;AAkCpB,eAAeb,KAAf","sourcesContent":["import Layout from '../components/layout';\nimport Plot from 'react-plotly.js';\nclass Chart extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [1, 2, 3],\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <Plot\n                        data={[\n                            {\n                                x: [\"Frank\", \"Jerry\", \"Jill\", \"Regis\", \"Tracy\"],\n                                y: [2, 6, 3],\n                                type: 'histogram',\n                                mode: 'lines+markers',\n                                marker: { color: 'green' },\n                            },\n                            // { type: 'bar', x: [1, 2, 3], y: [2, 5, 3] },\n                        ]}\n                        layout={{ width: 450, height: 450, title: 'Name vs WPM' }}\n                    />\n                </Layout>\n            </div>\n        );\n    }\n}\n\n\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}